<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.2.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="PCC Tests" enabled="true">
      <stringProp name="TestPlan.comments">This test plan was created by the BlazeMeter converter v.2.3.14. Please contact support@blazemeter.com for further support.</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="Results" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>true</responseHeaders>
            <requestHeaders>true</requestHeaders>
            <responseDataOnError>true</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="Backend Listener" enabled="true">
        <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="dapt.influxdb.database" elementType="Argument">
              <stringProp name="Argument.name">dapt.influxdb.database</stringProp>
              <stringProp name="Argument.value">jmeter</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="dapt.backendlistener.proyect" elementType="Argument">
              <stringProp name="Argument.name">dapt.backendlistener.proyect</stringProp>
              <stringProp name="Argument.value">ProductCarConfig</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="dapt.backendlistener.scene" elementType="Argument">
              <stringProp name="Argument.name">dapt.backendlistener.scene</stringProp>
              <stringProp name="Argument.value">EscPCC01GKE</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="dapt.backendlistener.testcase" elementType="Argument">
              <stringProp name="Argument.name">dapt.backendlistener.testcase</stringProp>
              <stringProp name="Argument.value">testcaseTest</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="dapt.backendlistener.typeLoadTest" elementType="Argument">
              <stringProp name="Argument.name">dapt.backendlistener.typeLoadTest</stringProp>
              <stringProp name="Argument.value">test</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="dapt.backendlistener.environment" elementType="Argument">
              <stringProp name="Argument.name">dapt.backendlistener.environment</stringProp>
              <stringProp name="Argument.value">env</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="dapt.influxdb.host" elementType="Argument">
              <stringProp name="Argument.name">dapt.influxdb.host</stringProp>
              <stringProp name="Argument.value">34.78.139.115</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="dapt.influxdb.port" elementType="Argument">
              <stringProp name="Argument.name">dapt.influxdb.port</stringProp>
              <stringProp name="Argument.value">8086</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="dapt.influxdb.user" elementType="Argument">
              <stringProp name="Argument.name">dapt.influxdb.user</stringProp>
              <stringProp name="Argument.value">admin</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="dapt.influxdb.pwd" elementType="Argument">
              <stringProp name="Argument.name">dapt.influxdb.pwd</stringProp>
              <stringProp name="Argument.value">admin</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="dapt.backendlistener.useSimulationRavis" elementType="Argument">
              <stringProp name="Argument.name">dapt.backendlistener.useSimulationRavis</stringProp>
              <stringProp name="Argument.value">false</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </elementProp>
        <stringProp name="classname">dapt.jmeter.JMeterInfluxDBBackendListenerClientRavisDAPTv2</stringProp>
      </BackendListener>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
        <collectionProp name="HeaderManager.headers"/>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="accept-context-key" elementType="Argument">
            <stringProp name="Argument.name">accept-context-key</stringProp>
            <stringProp name="Argument.value">007</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="data-structure-state" elementType="Argument">
            <stringProp name="Argument.name">data-structure-state</stringProp>
            <stringProp name="Argument.value">LIVE</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="price-setting-key" elementType="Argument">
            <stringProp name="Argument.name">price-setting-key</stringProp>
            <stringProp name="Argument.value">ID_37129104 </stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="configID" elementType="Argument">
            <stringProp name="Argument.name">configID</stringProp>
            <stringProp name="Argument.value">NOT_FOUND</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="clientKey" elementType="Argument">
            <stringProp name="Argument.name">clientKey</stringProp>
            <stringProp name="Argument.value">CUPRA</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="language-key" elementType="Argument">
            <stringProp name="Argument.name">language-key</stringProp>
            <stringProp name="Argument.value">de-DE</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="entorno" elementType="Argument">
            <stringProp name="Argument.name">entorno</stringProp>
            <stringProp name="Argument.value">prod</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="url" elementType="Argument">
            <stringProp name="Argument.name">url</stringProp>
            <stringProp name="Argument.value">product-car-configurator.prod.code.seat.cloud.vwgroup.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="seatCode" elementType="Argument">
            <stringProp name="Argument.name">seatCode</stringProp>
            <stringProp name="Argument.value">SQWOG4QX</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="carline" elementType="Argument">
            <stringProp name="Argument.name">carline</stringProp>
            <stringProp name="Argument.value">NOT_FOUND</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="engine" elementType="Argument">
            <stringProp name="Argument.name">engine</stringProp>
            <stringProp name="Argument.value">NOT_FOUND</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="equipment" elementType="Argument">
            <stringProp name="Argument.name">equipment</stringProp>
            <stringProp name="Argument.value">NOT_FOUND</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="auth" elementType="Argument">
            <stringProp name="Argument.name">auth</stringProp>
            <stringProp name="Argument.value">Basic c3RvcmVmcm9udDpNczJkSDdDNnMycVh5QGpE</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="token" elementType="Argument">
            <stringProp name="Argument.name">token</stringProp>
            <stringProp name="Argument.value">34hpeizxdfzc3xsjwb2qudirqg7wxja4xah8</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager" enabled="true">
        <collectionProp name="DNSCacheManager.servers"/>
        <boolProp name="DNSCacheManager.clearEachIteration">true</boolProp>
        <boolProp name="DNSCacheManager.isCustomResolver">false</boolProp>
      </DNSCacheManager>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
        <collectionProp name="AuthManager.auth_list"/>
        <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
      </AuthManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Full Car Config" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">30</stringProp>
        <stringProp name="ThreadGroup.ramp_time">20</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">0</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Prepare web" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get runtime json" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">s3-sdc-pcc-dev.s3.amazonaws.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">product-car-configurator/cupra-de.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get static texts" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">translator-shared.${entorno}.code.seat.cloud.vwgroup.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">translations/de/de/staticTexts_PCC</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Model Selection" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get legal information" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/symbolic-texts</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get default models" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/models</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="carline Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">carline</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.models[*].trims[0]</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
            <stringProp name="ForeachController.inputVal">carline</stringProp>
            <stringProp name="ForeachController.returnVal">carline</stringProp>
            <boolProp name="ForeachController.useSeparator">true</boolProp>
            <stringProp name="ForeachController.startIndex">0</stringProp>
          </ForeachController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get model information" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/trims/${carline}/information</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="configID Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">configID</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$[?(@.data.name =~ /.*ATECA/)].data.configurationId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">${configID}</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="carline Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">carline</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$[?(@.data.name =~ /.*ATECA/)].data.code</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">${carline}</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="engine Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">engine</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$[?(@.data.name =~ /.*ATECA/)].data.engines[0].code</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">${engine}</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get engine data" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/engines/${engine}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get trim information" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/trims/${carline}/features</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Version step" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get legal information" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/symbolic-texts</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get engines for model" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/trims/${carline}/engines</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get engine data" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/engines/${engine}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get trim information" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/trims/${carline}/information</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="configID Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">configID</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.configurationId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">${configID}</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get engine data" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/engines/${engine}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get trim information" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/trims/${carline}/features</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="configID Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">configID</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.configurationId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">${configID}</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Exterior" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Color" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get legal information" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/symbolic-texts</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get colors" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/colors</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-configid" elementType="Header">
                    <stringProp name="Header.name">accept-configid</stringProp>
                    <stringProp name="Header.value">${configID}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="color Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">color</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data[*].code</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get 360 images" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/images/overview</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-configid" elementType="Header">
                    <stringProp name="Header.name">accept-configid</stringProp>
                    <stringProp name="Header.value">${configID}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get legal information" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/legal-disclaimer</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get engine data" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/engines/engine-info</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-configid" elementType="Header">
                    <stringProp name="Header.name">accept-configid</stringProp>
                    <stringProp name="Header.value">${configID}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get configuration total price" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/configuration/${configID}/total-price</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get engine data" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/engines/engine-info</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-configid" elementType="Header">
                    <stringProp name="Header.name">accept-configid</stringProp>
                    <stringProp name="Header.value">${configID}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get configuration total price" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/configuration/${configID}/total-price</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add color" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[&quot;${color}&quot;]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/equipments</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-configid" elementType="Header">
                    <stringProp name="Header.name">accept-configid</stringProp>
                    <stringProp name="Header.value">${configID}</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                  <elementProp name="x-csrf-token" elementType="Header">
                    <stringProp name="Header.name">x-csrf-token</stringProp>
                    <stringProp name="Header.value">${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="configID Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">configID</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.configurationId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">${configID}</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get colors" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/colors</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-configid" elementType="Header">
                    <stringProp name="Header.name">accept-configid</stringProp>
                    <stringProp name="Header.value">${configID}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get 360 images" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/images/overview</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-configid" elementType="Header">
                    <stringProp name="Header.name">accept-configid</stringProp>
                    <stringProp name="Header.value">${configID}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Wheels" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get legal information" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/symbolic-texts</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get engine data" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/engines/engine-info</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-configid" elementType="Header">
                    <stringProp name="Header.name">accept-configid</stringProp>
                    <stringProp name="Header.value">${configID}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get wheels" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/wheels</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-configid" elementType="Header">
                    <stringProp name="Header.name">accept-configid</stringProp>
                    <stringProp name="Header.value">${configID}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="wheels Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">wheels</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data[*].code</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get configuration total price" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/configuration/${configID}/total-price</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get 360 images" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/images/overview</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-configid" elementType="Header">
                    <stringProp name="Header.name">accept-configid</stringProp>
                    <stringProp name="Header.value">${configID}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add wheels" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[&quot;${wheels}&quot;]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">sdc-car-configurator-adapter/car-configurator-adapter/v1/equipments</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-configid" elementType="Header">
                    <stringProp name="Header.name">accept-configid</stringProp>
                    <stringProp name="Header.value">${configID}</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                  <elementProp name="x-csrf-token" elementType="Header">
                    <stringProp name="Header.name">x-csrf-token</stringProp>
                    <stringProp name="Header.value">${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="configID Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">configID</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.configurationId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">${configID}</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get engine data" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/engines/engine-info</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-configid" elementType="Header">
                    <stringProp name="Header.name">accept-configid</stringProp>
                    <stringProp name="Header.value">${configID}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get wheels" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/wheels</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-configid" elementType="Header">
                    <stringProp name="Header.name">accept-configid</stringProp>
                    <stringProp name="Header.value">${configID}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get configuration total price" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/configuration/${configID}/total-price</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get 360 images" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/images/overview</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-configid" elementType="Header">
                    <stringProp name="Header.name">accept-configid</stringProp>
                    <stringProp name="Header.value">${configID}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Upholstery" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get legal information" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/symbolic-texts</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get engine data" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/engines/engine-info</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="accept-configid" elementType="Header">
                  <stringProp name="Header.name">accept-configid</stringProp>
                  <stringProp name="Header.value">${configID}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get upholsteries" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/upholsteries</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="accept-configid" elementType="Header">
                  <stringProp name="Header.name">accept-configid</stringProp>
                  <stringProp name="Header.value">${configID}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="upholstery Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">upholstery</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data[*].code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">2</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get configuration total price" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/configuration/${configID}/total-price</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get closeup images" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/images/closeup</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="accept-configid" elementType="Header">
                  <stringProp name="Header.name">accept-configid</stringProp>
                  <stringProp name="Header.value">${configID}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add upholstery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[&quot;${upholstery}&quot;]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/equipments</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="accept-configid" elementType="Header">
                  <stringProp name="Header.name">accept-configid</stringProp>
                  <stringProp name="Header.value">${configID}</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
                <elementProp name="x-csrf-token" elementType="Header">
                  <stringProp name="Header.name">x-csrf-token</stringProp>
                  <stringProp name="Header.value">34hpeizxdfzc3xsjwb2qudirqg7wxja4xah8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="configID Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">configID</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.configurationId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">${configID}</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get engine data" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/engines/engine-info</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="accept-configid" elementType="Header">
                  <stringProp name="Header.name">accept-configid</stringProp>
                  <stringProp name="Header.value">${configID}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get upholsteries" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/upholsteries</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="accept-configid" elementType="Header">
                  <stringProp name="Header.name">accept-configid</stringProp>
                  <stringProp name="Header.value">${configID}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get configuration total price" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/configuration/${configID}/total-price</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="accept-configid" elementType="Header">
                  <stringProp name="Header.name">accept-configid</stringProp>
                  <stringProp name="Header.value">${configID}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get closeup images" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/images/closeup</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="accept-configid" elementType="Header">
                  <stringProp name="Header.name">accept-configid</stringProp>
                  <stringProp name="Header.value">${configID}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Price details (pop up)" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get item prices" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/configuration/${configID}/item-prices</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get trim information" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/trims/trim-info</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="accept-configid" elementType="Header">
                  <stringProp name="Header.name">accept-configid</stringProp>
                  <stringProp name="Header.value">${configID}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get price details" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/configuration/price-details</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="accept-configid" elementType="Header">
                  <stringProp name="Header.name">accept-configid</stringProp>
                  <stringProp name="Header.value">${configID}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Equipment" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get legal information" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/symbolic-texts</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get engine data" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/engines/engine-info</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="accept-configid" elementType="Header">
                  <stringProp name="Header.name">accept-configid</stringProp>
                  <stringProp name="Header.value">${configID}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get equipment information" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/equipments</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="accept-configid" elementType="Header">
                  <stringProp name="Header.name">accept-configid</stringProp>
                  <stringProp name="Header.value">${configID}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="equipment Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">equipment</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data[*].code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">${equipment}</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="configID Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">configID</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.configurationId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">${configID}</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get configuration total price" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/configuration/${configID}/total-price</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add equipment" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[&quot;${equipment}&quot;]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/equipments</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="accept-configid" elementType="Header">
                  <stringProp name="Header.name">accept-configid</stringProp>
                  <stringProp name="Header.value">${configID}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
                <elementProp name="x-csrf-token" elementType="Header">
                  <stringProp name="Header.name">x-csrf-token</stringProp>
                  <stringProp name="Header.value">${token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get configuration total price" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/configuration/${configID}/total-price</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get equipment information" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/equipments</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="accept-configid" elementType="Header">
                  <stringProp name="Header.name">accept-configid</stringProp>
                  <stringProp name="Header.value">${configID}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get engine data" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/engines/engine-info</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="accept-configid" elementType="Header">
                  <stringProp name="Header.name">accept-configid</stringProp>
                  <stringProp name="Header.value">${configID}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get equipment information" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/equipments</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="accept-configid" elementType="Header">
                  <stringProp name="Header.name">accept-configid</stringProp>
                  <stringProp name="Header.value">${configID}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get configuration total price" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/configuration/${configID}/total-price</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Summary" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get legal information" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/symbolic-texts</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get 360 images" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/images/overview</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="accept-configid" elementType="Header">
                  <stringProp name="Header.name">accept-configid</stringProp>
                  <stringProp name="Header.value">${configID}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get trim information" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/trims/trim-info</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="accept-configid" elementType="Header">
                  <stringProp name="Header.name">accept-configid</stringProp>
                  <stringProp name="Header.value">${configID}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get price details" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/configuration/price-details</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="accept-configid" elementType="Header">
                  <stringProp name="Header.name">accept-configid</stringProp>
                  <stringProp name="Header.value">${configID}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get item prices" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/configuration/${configID}/item-prices</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get engine data" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/engines/engine-info</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="accept-configid" elementType="Header">
                  <stringProp name="Header.name">accept-configid</stringProp>
                  <stringProp name="Header.value">${configID}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get seat code" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&quot;${configID}&quot;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/configuration</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
                <elementProp name="x-csrf-token" elementType="Header">
                  <stringProp name="Header.name">x-csrf-token</stringProp>
                  <stringProp name="Header.value">${token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="seatCode Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">seatCode</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">${seatCode}</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get configuration total price" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/configuration/${configID}/total-price</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Download pdf" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sdc-pdf-generator/pdf-generator/cupra-summary</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
                <elementProp name="accept-configid" elementType="Header">
                  <stringProp name="Header.name">accept-configid</stringProp>
                  <stringProp name="Header.value">${configID}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If SeatCode is found" enabled="true">
          <stringProp name="IfController.condition">${__groovy(!vars.get(&apos;seatCode&apos;).equals(&apos;NOT_FOUND&apos;),)}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">true</boolProp>
        </IfController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Prepare web Code" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get runtime json" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">s3-sdc-pcc-dev.s3.amazonaws.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">product-car-configurator/cupra-de.json</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers"/>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get static texts" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">translator-shared.${entorno}.code.seat.cloud.vwgroup.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">translations/de/de/staticTexts_PCC</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers"/>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Model Selection Code" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get legal information" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/symbolic-texts</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get default models" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/models</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="carline Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">carline</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.models[*].trims[0]</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
              <stringProp name="ForeachController.inputVal">carline</stringProp>
              <stringProp name="ForeachController.returnVal">carline</stringProp>
              <boolProp name="ForeachController.useSeparator">true</boolProp>
              <stringProp name="ForeachController.startIndex">0</stringProp>
            </ForeachController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get model information" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${url}</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/trims/${carline}/information</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="accept-context-key" elementType="Header">
                      <stringProp name="Header.name">accept-context-key</stringProp>
                      <stringProp name="Header.value">${accept-context-key}</stringProp>
                    </elementProp>
                    <elementProp name="accept-data-structure-state" elementType="Header">
                      <stringProp name="Header.name">accept-data-structure-state</stringProp>
                      <stringProp name="Header.value">${data-structure-state}</stringProp>
                    </elementProp>
                    <elementProp name="accept-price-setting-key" elementType="Header">
                      <stringProp name="Header.name">accept-price-setting-key</stringProp>
                      <stringProp name="Header.value">${price-setting-key}</stringProp>
                    </elementProp>
                    <elementProp name="accept-client-key" elementType="Header">
                      <stringProp name="Header.name">accept-client-key</stringProp>
                      <stringProp name="Header.value">${clientKey}</stringProp>
                    </elementProp>
                    <elementProp name="accept-language-key" elementType="Header">
                      <stringProp name="Header.name">accept-language-key</stringProp>
                      <stringProp name="Header.value">${language-key}</stringProp>
                    </elementProp>
                    <elementProp name="authorization" elementType="Header">
                      <stringProp name="Header.name">authorization</stringProp>
                      <stringProp name="Header.value">${auth}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="configID Extractor" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">configID</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$[?(@.data.name =~ /.*ATECA/)].data.configurationId</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                  <stringProp name="JSONPostProcessor.defaultValues">${configID}</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="carline Extractor" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">carline</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$[?(@.data.name =~ /.*ATECA/)].data.code</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                  <stringProp name="JSONPostProcessor.defaultValues">${carline}</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="engine Extractor" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">engine</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$[?(@.data.name =~ /.*ATECA/)].data.engines[0].code</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                  <stringProp name="JSONPostProcessor.defaultValues">${engine}</stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get engine data" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/engines/${engine}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get trim information" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/trims/${carline}/features</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Load configuration (seat code)" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/configuration/load/${seatCode}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Summary Code" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get legal information" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/symbolic-texts</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get configuration total price" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/configuration/${configID}/total-price</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get 360 images" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/images/overview</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-configid" elementType="Header">
                    <stringProp name="Header.name">accept-configid</stringProp>
                    <stringProp name="Header.value">${configID}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get trim information" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/trims/trim-info</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-configid" elementType="Header">
                    <stringProp name="Header.name">accept-configid</stringProp>
                    <stringProp name="Header.value">${configID}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get price details" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/configuration/price-details</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-configid" elementType="Header">
                    <stringProp name="Header.name">accept-configid</stringProp>
                    <stringProp name="Header.value">${configID}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get item prices" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/configuration/${configID}/item-prices</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get engine data" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/engines/engine-info</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-configid" elementType="Header">
                    <stringProp name="Header.name">accept-configid</stringProp>
                    <stringProp name="Header.value">${configID}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get seat code" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&quot;${configID}&quot;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">sdc-car-configurator-adapter/car-configurator-adapter/v1/configuration</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                  <elementProp name="x-csrf-token" elementType="Header">
                    <stringProp name="Header.name">x-csrf-token</stringProp>
                    <stringProp name="Header.value">${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get configuration total price" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/configuration/${configID}/total-price</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup guiclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroupGui" testclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup" testname="bzm - Concurrency Thread Group" enabled="false">
        <elementProp name="ThreadGroup.main_controller" elementType="com.blazemeter.jmeter.control.VirtualUserController"/>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="TargetLevel">10</stringProp>
        <stringProp name="RampUp">1</stringProp>
        <stringProp name="Steps">0</stringProp>
        <stringProp name="Hold">7</stringProp>
        <stringProp name="LogFilename"></stringProp>
        <stringProp name="Iterations"></stringProp>
        <stringProp name="Unit">M</stringProp>
      </com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Prepare web" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get runtime json" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">s3-sdc-pcc-dev.s3.amazonaws.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">product-car-configurator/cupra-de.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get static texts" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">translator-shared.${entorno}.code.seat.cloud.vwgroup.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">translations/de/de/staticTexts_PCC</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Model Selection" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get legal information" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/symbolic-texts</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get default models" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/models</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="carline Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">carline</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.models[*].trims[0]</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
            <stringProp name="ForeachController.inputVal">carline</stringProp>
            <stringProp name="ForeachController.returnVal">carline</stringProp>
            <boolProp name="ForeachController.useSeparator">true</boolProp>
            <stringProp name="ForeachController.startIndex">0</stringProp>
          </ForeachController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get model information" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/trims/${carline}/information</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="configID Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">configID</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$[?(@.data.name =~ /.*ATECA/)].data.configurationId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">${configID}</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="carline Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">carline</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$[?(@.data.name =~ /.*ATECA/)].data.code</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">${carline}</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="engine Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">engine</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$[?(@.data.name =~ /.*ATECA/)].data.engines[0].code</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">${engine}</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get engine data" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/engines/${engine}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get trim information" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/trims/${carline}/features</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Version step" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get legal information" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/symbolic-texts</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get engines for model" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/trims/${carline}/engines</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get engine data" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/engines/${engine}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get trim information" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/trims/${carline}/information</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="configID Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">configID</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.configurationId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">${configID}</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get engine data" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/engines/${engine}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get trim information" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/trims/${carline}/features</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="configID Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">configID</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.configurationId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">${configID}</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Exterior" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Color" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get legal information" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/symbolic-texts</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get colors" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/colors</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-configid" elementType="Header">
                    <stringProp name="Header.name">accept-configid</stringProp>
                    <stringProp name="Header.value">${configID}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="color Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">color</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data[*].code</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get 360 images" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/images/overview</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-configid" elementType="Header">
                    <stringProp name="Header.name">accept-configid</stringProp>
                    <stringProp name="Header.value">${configID}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get legal information" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/legal-disclaimer</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get engine data" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/engines/engine-info</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-configid" elementType="Header">
                    <stringProp name="Header.name">accept-configid</stringProp>
                    <stringProp name="Header.value">${configID}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get configuration total price" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/configuration/${configID}/total-price</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get engine data" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/engines/engine-info</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-configid" elementType="Header">
                    <stringProp name="Header.name">accept-configid</stringProp>
                    <stringProp name="Header.value">${configID}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get configuration total price" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/configuration/${configID}/total-price</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add color" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[&quot;${color}&quot;]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/equipments</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-configid" elementType="Header">
                    <stringProp name="Header.name">accept-configid</stringProp>
                    <stringProp name="Header.value">${configID}</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                  <elementProp name="x-csrf-token" elementType="Header">
                    <stringProp name="Header.name">x-csrf-token</stringProp>
                    <stringProp name="Header.value">${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="configID Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">configID</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.configurationId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">${configID}</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get colors" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/colors</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-configid" elementType="Header">
                    <stringProp name="Header.name">accept-configid</stringProp>
                    <stringProp name="Header.value">${configID}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get 360 images" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/images/overview</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-configid" elementType="Header">
                    <stringProp name="Header.name">accept-configid</stringProp>
                    <stringProp name="Header.value">${configID}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Wheels" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get legal information" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/symbolic-texts</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get engine data" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/engines/engine-info</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-configid" elementType="Header">
                    <stringProp name="Header.name">accept-configid</stringProp>
                    <stringProp name="Header.value">${configID}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get wheels" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/wheels</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-configid" elementType="Header">
                    <stringProp name="Header.name">accept-configid</stringProp>
                    <stringProp name="Header.value">${configID}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="wheels Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">wheels</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data[*].code</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get configuration total price" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/configuration/${configID}/total-price</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get 360 images" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/images/overview</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-configid" elementType="Header">
                    <stringProp name="Header.name">accept-configid</stringProp>
                    <stringProp name="Header.value">${configID}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add wheels" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[&quot;${wheels}&quot;]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">sdc-car-configurator-adapter/car-configurator-adapter/v1/equipments</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-configid" elementType="Header">
                    <stringProp name="Header.name">accept-configid</stringProp>
                    <stringProp name="Header.value">${configID}</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                  <elementProp name="x-csrf-token" elementType="Header">
                    <stringProp name="Header.name">x-csrf-token</stringProp>
                    <stringProp name="Header.value">${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="configID Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">configID</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.configurationId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">${configID}</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get engine data" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/engines/engine-info</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-configid" elementType="Header">
                    <stringProp name="Header.name">accept-configid</stringProp>
                    <stringProp name="Header.value">${configID}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get wheels" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/wheels</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-configid" elementType="Header">
                    <stringProp name="Header.name">accept-configid</stringProp>
                    <stringProp name="Header.value">${configID}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get configuration total price" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/configuration/${configID}/total-price</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get 360 images" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/images/overview</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-configid" elementType="Header">
                    <stringProp name="Header.name">accept-configid</stringProp>
                    <stringProp name="Header.value">${configID}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Upholstery" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get legal information" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/symbolic-texts</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get engine data" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/engines/engine-info</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="accept-configid" elementType="Header">
                  <stringProp name="Header.name">accept-configid</stringProp>
                  <stringProp name="Header.value">${configID}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get upholsteries" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/upholsteries</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="accept-configid" elementType="Header">
                  <stringProp name="Header.name">accept-configid</stringProp>
                  <stringProp name="Header.value">${configID}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="upholstery Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">upholstery</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data[*].code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">2</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get configuration total price" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/configuration/${configID}/total-price</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get closeup images" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/images/closeup</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="accept-configid" elementType="Header">
                  <stringProp name="Header.name">accept-configid</stringProp>
                  <stringProp name="Header.value">${configID}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add upholstery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[&quot;${upholstery}&quot;]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/equipments</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="accept-configid" elementType="Header">
                  <stringProp name="Header.name">accept-configid</stringProp>
                  <stringProp name="Header.value">${configID}</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
                <elementProp name="x-csrf-token" elementType="Header">
                  <stringProp name="Header.name">x-csrf-token</stringProp>
                  <stringProp name="Header.value">34hpeizxdfzc3xsjwb2qudirqg7wxja4xah8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="configID Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">configID</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.configurationId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">${configID}</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get engine data" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/engines/engine-info</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="accept-configid" elementType="Header">
                  <stringProp name="Header.name">accept-configid</stringProp>
                  <stringProp name="Header.value">${configID}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get upholsteries" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/upholsteries</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="accept-configid" elementType="Header">
                  <stringProp name="Header.name">accept-configid</stringProp>
                  <stringProp name="Header.value">${configID}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get configuration total price" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/configuration/${configID}/total-price</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="accept-configid" elementType="Header">
                  <stringProp name="Header.name">accept-configid</stringProp>
                  <stringProp name="Header.value">${configID}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get closeup images" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/images/closeup</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="accept-configid" elementType="Header">
                  <stringProp name="Header.name">accept-configid</stringProp>
                  <stringProp name="Header.value">${configID}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Price details (pop up)" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get item prices" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/configuration/${configID}/item-prices</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get trim information" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/trims/trim-info</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="accept-configid" elementType="Header">
                  <stringProp name="Header.name">accept-configid</stringProp>
                  <stringProp name="Header.value">${configID}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get price details" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/configuration/price-details</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="accept-configid" elementType="Header">
                  <stringProp name="Header.name">accept-configid</stringProp>
                  <stringProp name="Header.value">${configID}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Equipment" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get legal information" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/symbolic-texts</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get engine data" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/engines/engine-info</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="accept-configid" elementType="Header">
                  <stringProp name="Header.name">accept-configid</stringProp>
                  <stringProp name="Header.value">${configID}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get equipment information" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/equipments</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="accept-configid" elementType="Header">
                  <stringProp name="Header.name">accept-configid</stringProp>
                  <stringProp name="Header.value">${configID}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="equipment Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">equipment</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data[*].code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">${equipment}</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="configID Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">configID</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.configurationId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">${configID}</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get configuration total price" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/configuration/${configID}/total-price</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add equipment" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[&quot;${equipment}&quot;]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/equipments</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="accept-configid" elementType="Header">
                  <stringProp name="Header.name">accept-configid</stringProp>
                  <stringProp name="Header.value">${configID}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
                <elementProp name="x-csrf-token" elementType="Header">
                  <stringProp name="Header.name">x-csrf-token</stringProp>
                  <stringProp name="Header.value">${token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get configuration total price" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/configuration/${configID}/total-price</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get equipment information" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/equipments</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="accept-configid" elementType="Header">
                  <stringProp name="Header.name">accept-configid</stringProp>
                  <stringProp name="Header.value">${configID}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get engine data" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/engines/engine-info</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="accept-configid" elementType="Header">
                  <stringProp name="Header.name">accept-configid</stringProp>
                  <stringProp name="Header.value">${configID}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get equipment information" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/equipments</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="accept-configid" elementType="Header">
                  <stringProp name="Header.name">accept-configid</stringProp>
                  <stringProp name="Header.value">${configID}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get configuration total price" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/configuration/${configID}/total-price</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Summary" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get legal information" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/symbolic-texts</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get 360 images" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/images/overview</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="accept-configid" elementType="Header">
                  <stringProp name="Header.name">accept-configid</stringProp>
                  <stringProp name="Header.value">${configID}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get trim information" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/trims/trim-info</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="accept-configid" elementType="Header">
                  <stringProp name="Header.name">accept-configid</stringProp>
                  <stringProp name="Header.value">${configID}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get price details" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/configuration/price-details</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="accept-configid" elementType="Header">
                  <stringProp name="Header.name">accept-configid</stringProp>
                  <stringProp name="Header.value">${configID}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get item prices" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/configuration/${configID}/item-prices</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get engine data" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/engines/engine-info</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="accept-configid" elementType="Header">
                  <stringProp name="Header.name">accept-configid</stringProp>
                  <stringProp name="Header.value">${configID}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get seat code" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&quot;${configID}&quot;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/configuration</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
                <elementProp name="x-csrf-token" elementType="Header">
                  <stringProp name="Header.name">x-csrf-token</stringProp>
                  <stringProp name="Header.value">${token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="seatCode Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">seatCode</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">${seatCode}</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get configuration total price" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/configuration/${configID}/total-price</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Download pdf" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sdc-pdf-generator/pdf-generator/cupra-summary</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept-context-key" elementType="Header">
                  <stringProp name="Header.name">accept-context-key</stringProp>
                  <stringProp name="Header.value">${accept-context-key}</stringProp>
                </elementProp>
                <elementProp name="accept-data-structure-state" elementType="Header">
                  <stringProp name="Header.name">accept-data-structure-state</stringProp>
                  <stringProp name="Header.value">${data-structure-state}</stringProp>
                </elementProp>
                <elementProp name="accept-price-setting-key" elementType="Header">
                  <stringProp name="Header.name">accept-price-setting-key</stringProp>
                  <stringProp name="Header.value">${price-setting-key}</stringProp>
                </elementProp>
                <elementProp name="accept-client-key" elementType="Header">
                  <stringProp name="Header.name">accept-client-key</stringProp>
                  <stringProp name="Header.value">${clientKey}</stringProp>
                </elementProp>
                <elementProp name="accept-language-key" elementType="Header">
                  <stringProp name="Header.name">accept-language-key</stringProp>
                  <stringProp name="Header.value">${language-key}</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${auth}</stringProp>
                </elementProp>
                <elementProp name="accept-configid" elementType="Header">
                  <stringProp name="Header.name">accept-configid</stringProp>
                  <stringProp name="Header.value">${configID}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If SeatCode is found" enabled="true">
          <stringProp name="IfController.condition">${__groovy(!vars.get(&apos;seatCode&apos;).equals(&apos;NOT_FOUND&apos;),)}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">true</boolProp>
        </IfController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Prepare web Code" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get runtime json" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">s3-sdc-pcc-dev.s3.amazonaws.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">product-car-configurator/cupra-de.json</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers"/>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get static texts" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">translator-shared.${entorno}.code.seat.cloud.vwgroup.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">translations/de/de/staticTexts_PCC</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers"/>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Model Selection Code" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get legal information" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/symbolic-texts</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get default models" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/models</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="carline Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">carline</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.models[*].trims[0]</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
              <stringProp name="ForeachController.inputVal">carline</stringProp>
              <stringProp name="ForeachController.returnVal">carline</stringProp>
              <boolProp name="ForeachController.useSeparator">true</boolProp>
              <stringProp name="ForeachController.startIndex">0</stringProp>
            </ForeachController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get model information" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${url}</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/trims/${carline}/information</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="accept-context-key" elementType="Header">
                      <stringProp name="Header.name">accept-context-key</stringProp>
                      <stringProp name="Header.value">${accept-context-key}</stringProp>
                    </elementProp>
                    <elementProp name="accept-data-structure-state" elementType="Header">
                      <stringProp name="Header.name">accept-data-structure-state</stringProp>
                      <stringProp name="Header.value">${data-structure-state}</stringProp>
                    </elementProp>
                    <elementProp name="accept-price-setting-key" elementType="Header">
                      <stringProp name="Header.name">accept-price-setting-key</stringProp>
                      <stringProp name="Header.value">${price-setting-key}</stringProp>
                    </elementProp>
                    <elementProp name="accept-client-key" elementType="Header">
                      <stringProp name="Header.name">accept-client-key</stringProp>
                      <stringProp name="Header.value">${clientKey}</stringProp>
                    </elementProp>
                    <elementProp name="accept-language-key" elementType="Header">
                      <stringProp name="Header.name">accept-language-key</stringProp>
                      <stringProp name="Header.value">${language-key}</stringProp>
                    </elementProp>
                    <elementProp name="authorization" elementType="Header">
                      <stringProp name="Header.name">authorization</stringProp>
                      <stringProp name="Header.value">${auth}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="configID Extractor" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">configID</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$[?(@.data.name =~ /.*ATECA/)].data.configurationId</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                  <stringProp name="JSONPostProcessor.defaultValues">${configID}</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="carline Extractor" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">carline</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$[?(@.data.name =~ /.*ATECA/)].data.code</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                  <stringProp name="JSONPostProcessor.defaultValues">${carline}</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="engine Extractor" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">engine</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$[?(@.data.name =~ /.*ATECA/)].data.engines[0].code</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                  <stringProp name="JSONPostProcessor.defaultValues">${engine}</stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get engine data" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/engines/${engine}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get trim information" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/trims/${carline}/features</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Load configuration (seat code)" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/configuration/load/${seatCode}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Summary Code" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get legal information" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/symbolic-texts</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get configuration total price" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/configuration/${configID}/total-price</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get 360 images" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/images/overview</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-configid" elementType="Header">
                    <stringProp name="Header.name">accept-configid</stringProp>
                    <stringProp name="Header.value">${configID}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get trim information" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/trims/trim-info</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-configid" elementType="Header">
                    <stringProp name="Header.name">accept-configid</stringProp>
                    <stringProp name="Header.value">${configID}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get price details" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/configuration/price-details</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-configid" elementType="Header">
                    <stringProp name="Header.name">accept-configid</stringProp>
                    <stringProp name="Header.value">${configID}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get item prices" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/configuration/${configID}/item-prices</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get engine data" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/engines/engine-info</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-configid" elementType="Header">
                    <stringProp name="Header.name">accept-configid</stringProp>
                    <stringProp name="Header.value">${configID}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get seat code" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&quot;${configID}&quot;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">sdc-car-configurator-adapter/car-configurator-adapter/v1/configuration</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                  <elementProp name="x-csrf-token" elementType="Header">
                    <stringProp name="Header.name">x-csrf-token</stringProp>
                    <stringProp name="Header.value">${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get configuration total price" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">car-configurator-adapter/v1/configuration/${configID}/total-price</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept-context-key" elementType="Header">
                    <stringProp name="Header.name">accept-context-key</stringProp>
                    <stringProp name="Header.value">${accept-context-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-data-structure-state" elementType="Header">
                    <stringProp name="Header.name">accept-data-structure-state</stringProp>
                    <stringProp name="Header.value">${data-structure-state}</stringProp>
                  </elementProp>
                  <elementProp name="accept-price-setting-key" elementType="Header">
                    <stringProp name="Header.name">accept-price-setting-key</stringProp>
                    <stringProp name="Header.value">${price-setting-key}</stringProp>
                  </elementProp>
                  <elementProp name="accept-client-key" elementType="Header">
                    <stringProp name="Header.name">accept-client-key</stringProp>
                    <stringProp name="Header.value">${clientKey}</stringProp>
                  </elementProp>
                  <elementProp name="accept-language-key" elementType="Header">
                    <stringProp name="Header.name">accept-language-key</stringProp>
                    <stringProp name="Header.value">${language-key}</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${auth}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
